try:0x0d 
...     import uos0x0d 
...     uos.remove("/boot.py")0x0d 
...     0x08 0x08 0x08 0x08 0x1b [Kexcept:0x0d 
...     print('MicroPython: failed')0x0d 
...     0x08 0x08 0x08 0x08 0x1b [K0x0d 
>>> 0x0d 
>>> ets Jun  8 2016 00:22:570x0d 
0x0d 
rst:0x1 (POWERON_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)0x0d 
configsip: 0, SPIWP:0xee0x0d 
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x000x0d 
mode:DIO, clock div:20x0d 
load:0x3fff0018,len:40x0d 
load:0x3fff001c,len:51480x0d 
load:0x40078000,len:128800x0d 
load:0x40080400,len:34840x0d 
entry 0x400806300x0d 
0x1b [0;32mI (549) cpu_start: Pro cpu up.0x1b [0m0x0d 
0x1b [0;32mI (549) cpu_start: Application information:0x1b [0m0x0d 
0x1b [0;32mI (549) cpu_start: Compile time:     Sep  2 2020 03:04:090x1b [0m0x0d 
0x1b [0;32mI (552) cpu_start: ELF file SHA256:  0000000000000000...0x1b [0m0x0d 
0x1b [0;32mI (558) cpu_start: ESP-IDF:          v4.0.10x1b [0m0x0d 
0x1b [0;32mI (563) cpu_start: Starting app cpu, entry point is 0x400828300x1b [0m0x0d 
0x1b [0;32mI (0) cpu_start: App cpu up.0x1b [0m0x0d 
0x1b [0;32mI (574) heap_init: Initializing. RAM available for dynamic allocation:0x1b [0m0x0d 
0x1b [0;32mI (580) heap_init: At 3FFAFF10 len 000000F0 (0 KiB): DRAM0x1b [0m0x0d 
0x1b [0;32mI (586) heap_init: At 3FFB6388 len 00001C78 (7 KiB): DRAM0x1b [0m0x0d 
0x1b [0;32mI (593) heap_init: At 3FFB9A20 len 00004108 (16 KiB): DRAM0x1b [0m0x0d 
0x1b [0;32mI (599) heap_init: At 3FFBDB5C len 00000004 (0 KiB): DRAM0x1b [0m0x0d 
0x1b [0;32mI (605) heap_init: At 3FFCAD78 len 00015288 (84 KiB): DRAM0x1b [0m0x0d 
0x1b [0;32mI (611) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM0x1b [0m0x0d 
0x1b [0;32mI (617) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM0x1b [0m0x0d 
0x1b [0;32mI (624) heap_init: At 4009E9D8 len 00001628 (5 KiB): IRAM0x1b [0m0x0d 
0x1b [0;32mI (630) cpu_start: Pro cpu start user code0x1b [0m0x0d 
0x1b [0;32mI (648) spi_flash: detected chip: generic0x1b [0m0x0d 
0x1b [0;32mI (649) spi_flash: flash io: dio0x1b [0m0x0d 
0x1b [0;32mI (649) cpu_start: Starting scheduler on PRO CPU.0x1b [0m0x0d 
0x1b [0;32mI (0) cpu_start: Starting scheduler on APP CPU.0x1b [0m0x0d 
MicroPython v1.13 on 2020-09-02; ESP32 module with ESP320x0d 
Type "help()" for more information.0x0d 
>>> import network0x0d 
>>> sta_if = network.WLAN(network.STA_IF)0x0d 
I (380) wifi:wifi driver task: 3ffd1d4c, prio:23, stack:6656, core=00x0d 
0x1b [0;32mI (1418) system_api: Base MAC address is not set, read default base MAC address from BLK0 of EFUSE0x1b [0m0x0d 
0x1b [0;32mI (1428) system_api: Base MAC address is not set, read default base MAC address from BLK0 of EFUSE0x1b [0m0x0d 
I (1458) wifi:wifi firmware version: aa5336b0x0d 
I (1458) wifi:config NVS flash: enabled0x0d 
I (1458) wifi:config nano formating: disabled0x0d 
I (1458) wifi:Init dynamic tx buffer num: 320x0d 
I (1458) wifi:Init data frame dynamic rx buffer num: 320x0d 
I (1468) wifi:Init management frame dynamic rx buffer num: 320x0d 
I (1468) wifi:Init management short buffer num: 320x0d 
I (1478) wifi:Init static rx buffer size: 16000x0d 
I (1478) wifi:Init static rx buffer num: 100x0d 
I (1478) wifi:Init dynamic rx buffer num: 320x0d 
>>> sta_if.active(True)0x0d 
0x1b [0;32mI (1828) phy: phy_version: 4180, cb3948e, Sep 12 2019, 16:39:13, 0, 00x1b [0m0x0d 
I (1838) wifi:mode : sta (24:0a:c4:30:c9:d0)0x0d 
True0x0d 
0x1b [0;32mI (1838) wifi: STA_START0x1b [0m0x0d 
>>> sta_if.scan()0x0d 
0x1b [0;32mI (4118) network: event 10x1b [0m0x0d 
[(b'SpectrumSetup-D8', b'D\xad\xb1Fp\xde', 6, -74, 3, False), (b'Wireless-N(2.4G)', b'\x0eAX\x11\xcd\xfa', 11, -85, 4, False), (b'MySpectrumWiFi00-2G', b'\x08\xd5\x9d\x92\xc1\x06', 1, -92, 3, False), (b'MejiaAntolin', b'\x10\x05\xb1F\x00 ', 1, -94, 3, False)]0x0d 
>>> try:0x0d 
...     import uos0x0d 
...     uos.remove("/boot.py")0x0d 
...     0x08 0x08 0x08 0x08 0x1b [Kexcept:0x0d 
...     print('MicroPython: failed')0x0d 
...     0x08 0x08 0x08 0x08 0x1b [K0x0d 
MicroPython: failed0x0d 
>>> 0x0d 
>>> 