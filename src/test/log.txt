try:0x0d 
...     with open ("/boot.py") as f:0x0d 
...         f.readlines()0x0d 
...         0x08 0x08 0x08 0x08 0x1b [K0x08 0x08 0x08 0x08 0x1b [Kexcept:0x0d 
...     print('MicroPython: failed')0x0d 
...     0x08 0x08 0x08 0x08 0x1b [K0x0d 
['import network\n', 'sta_if = network.WLAN(network.STA_IF)\n', 'sta_if.active(True)\n', "sta_if.connect('Wireless-N(2.4G)', 'hardwoodfloors911')\n", 'sta_if.isconnected()\n']0x0d 
>>> 0x0d 
>>> ets Jun  8 2016 00:22:570x0d 
0x0d 
rst:0x1 (POWERON_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)0x0d 
configsip: 0, SPIWP:0xee0x0d 
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x000x0d 
mode:DIO, clock div:20x0d 
load:0x3fff0018,len:40x0d 
load:0x3fff001c,len:51480x0d 
load:0x40078000,len:128800x0d 
load:0x40080400,len:34840x0d 
entry 0x400806300x0d 
0x1b [0;32mI (549) cpu_start: Pro cpu up.0x1b [0m0x0d 
0x1b [0;32mI (549) cpu_start: Application information:0x1b [0m0x0d 
0x1b [0;32mI (549) cpu_start: Compile time:     Sep  2 2020 03:04:090x1b [0m0x0d 
0x1b [0;32mI (552) cpu_start: ELF file SHA256:  0000000000000000...0x1b [0m0x0d 
0x1b [0;32mI (558) cpu_start: ESP-IDF:          v4.0.10x1b [0m0x0d 
0x1b [0;32mI (563) cpu_start: Starting app cpu, entry point is 0x400828300x1b [0m0x0d 
0x1b [0;32mI (0) cpu_start: App cpu up.0x1b [0m0x0d 
0x1b [0;32mI (573) heap_init: Initializing. RAM available for dynamic allocation:0x1b [0m0x0d 
0x1b [0;32mI (580) heap_init: At 3FFAFF10 len 000000F0 (0 KiB): DRAM0x1b [0m0x0d 
0x1b [0;32mI (586) heap_init: At 3FFB6388 len 00001C78 (7 KiB): DRAM0x1b [0m0x0d 
0x1b [0;32mI (592) heap_init: At 3FFB9A20 len 00004108 (16 KiB): DRAM0x1b [0m0x0d 
0x1b [0;32mI (599) heap_init: At 3FFBDB5C len 00000004 (0 KiB): DRAM0x1b [0m0x0d 
0x1b [0;32mI (605) heap_init: At 3FFCAD78 len 00015288 (84 KiB): DRAM0x1b [0m0x0d 
0x1b [0;32mI (611) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM0x1b [0m0x0d 
0x1b [0;32mI (617) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM0x1b [0m0x0d 
0x1b [0;32mI (624) heap_init: At 4009E9D8 len 00001628 (5 KiB): IRAM0x1b [0m0x0d 
0x1b [0;32mI (630) cpu_start: Pro cpu start user code0x1b [0m0x0d 
0x1b [0;32mI (648) spi_flash: detected chip: generic0x1b [0m0x0d 
0x1b [0;32mI (649) spi_flash: flash io: dio0x1b [0m0x0d 
0x1b [0;32mI (649) cpu_start: Starting scheduler on PRO CPU.0x1b [0m0x0d 
0x1b [0;32mI (0) cpu_start: Starting scheduler on APP CPU.0x1b [0m0x0d 
I (90) wifi:wifi driver task: 3ffd1dfc, prio:23, stack:6656, core=00x0d 
0x1b [0;32mI (838) system_api: Base MAC address is not set, read default base MAC address from BLK0 of EFUSE0x1b [0m0x0d 
0x1b [0;32mI (848) system_api: Base MAC address is not set, read default base MAC address from BLK0 of EFUSE0x1b [0m0x0d 
I (878) wifi:wifi firmware version: aa5336b0x0d 
I (878) wifi:config NVS flash: enabled0x0d 
I (878) wifi:config nano formating: disabled0x0d 
I (878) wifi:Init dynamic tx buffer num: 320x0d 
I (878) wifi:Init data frame dynamic rx buffer num: 320x0d 
I (888) wifi:Init management frame dynamic rx buffer num: 320x0d 
I (888) wifi:Init management short buffer num: 320x0d 
I (898) wifi:Init static rx buffer size: 16000x0d 
I (898) wifi:Init static rx buffer num: 100x0d 
I (898) wifi:Init dynamic rx buffer num: 320x0d 
0x1b [0;32mI (1008) phy: phy_version: 4180, cb3948e, Sep 12 2019, 16:39:13, 0, 00x1b [0m0x0d 
I (1008) wifi:mode : sta (24:0a:c4:30:c9:d0)0x0d 
0x1b [0;32mI (1008) wifi: STA_START0x1b [0m0x0d 
MicroPython v1.13 on 2020-09-02; ESP32 module with ESP320x0d 
Type "help()" for more information.0x0d 
>>> import network0x0d 
>>> sta_if = network.WLAN(network.STA_IF)0x0d 
>>> sta_if.active(True)0x0d 
True0x0d 
>>> sta_if.scan()0x0d 
W (1168) wifi:sta_scan: STA is connecting, scan are not allowed!0x0d 
[]0x0d 
>>> I (3058) wifi:new:<11,2>, old:<1,0>, ap:<255,255>, sta:<11,2>, prof:10x0d 
I (3908) wifi:state: init -> auth (b0)0x0d 
I (3908) wifi:state: auth -> assoc (0)0x0d 
I (3918) wifi:state: assoc -> run (10)0x0d 
I (3928) wifi:connected with Wireless-N(2.4G), aid = 1, channel 11, 40D, bssid = 0e:41:58:11:cd:fa0x0d 
I (3928) wifi:security: WPA2-PSK, phy: bgn, rssi: -800x0d 
I (3938) wifi:pm start, type: 10x0d 
0x0d 
0x1b [0;32mI (3938) network: CONNECTED0x1b [0m0x0d 
I (4008) wifi:AP's beacon interval = 102400 us, DTIM period = 10x0d 
0x1b [0;32mI (4828) tcpip_adapter: sta ip: 192.168.1.244, mask: 255.255.255.0, gw: 192.168.1.2540x1b [0m0x0d 
0x1b [0;32mI (4828) network: GOT_IP0x1b [0m0x0d 
try:0x0d 
...     with open ("/boot.py") as f:0x0d 
...         f.readlines()0x0d 
...         0x08 0x08 0x08 0x08 0x1b [K0x08 0x08 0x08 0x08 0x1b [Kexcept:0x0d 
...     print('MicroPython: failed')0x0d 
...     0x08 0x08 0x08 0x08 0x1b [K0x0d 
['import network\n', 'sta_if = network.WLAN(network.STA_IF)\n', 'sta_if.active(True)\n', "sta_if.connect('Wireless-N(2.4G)', 'hardwoodfloors911')\n", 'sta_if.isconnected()\n']0x0d 
>>> 0x0d 
>>> with open("/this/is/a/test/directory/file.txt", "w") as f:0x0d 
...     ets Jun  8 2016 00:22:570x0d 
0x0d 
rst:0x1 (POWERON_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)0x0d 
configsip: 0, SPIWP:0xee0x0d 
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x000x0d 
mode:DIO, clock div:20x0d 
load:0x3fff0018,len:40x0d 
load:0x3fff001c,len:51480x0d 
load:0x40078000,len:128800x0d 
load:0x40080400,len:34840x0d 
entry 0x400806300x0d 
0x1b [0;32mI (549) cpu_start: Pro cpu up.0x1b [0m0x0d 
0x1b [0;32mI (549) cpu_start: Application information:0x1b [0m0x0d 
0x1b [0;32mI (549) cpu_start: Compile time:     Sep  2 2020 03:04:090x1b [0m0x0d 
0x1b [0;32mI (552) cpu_start: ELF file SHA256:  0000000000000000...0x1b [0m0x0d 
0x1b [0;32mI (558) cpu_start: ESP-IDF:          v4.0.10x1b [0m0x0d 
0x1b [0;32mI (563) cpu_start: Starting app cpu, entry point is 0x400828300x1b [0m0x0d 
0x1b [0;32mI (0) cpu_start: App cpu up.0x1b [0m0x0d 
0x1b [0;32mI (573) heap_init: Initializing. RAM available for dynamic allocation:0x1b [0m0x0d 
0x1b [0;32mI (580) heap_init: At 3FFAFF10 len 000000F0 (0 KiB): DRAM0x1b [0m0x0d 
0x1b [0;32mI (586) heap_init: At 3FFB6388 len 00001C78 (7 KiB): DRAM0x1b [0m0x0d 
0x1b [0;32mI (592) heap_init: At 3FFB9A20 len 00004108 (16 KiB): DRAM0x1b [0m0x0d 
0x1b [0;32mI (599) heap_init: At 3FFBDB5C len 00000004 (0 KiB): DRAM0x1b [0m0x0d 
0x1b [0;32mI (605) heap_init: At 3FFCAD78 len 00015288 (84 KiB): DRAM0x1b [0m0x0d 
0x1b [0;32mI (611) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM0x1b [0m0x0d 
0x1b [0;32mI (617) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM0x1b [0m0x0d 
0x1b [0;32mI (624) heap_init: At 4009E9D8 len 00001628 (5 KiB): IRAM0x1b [0m0x0d 
0x1b [0;32mI (630) cpu_start: Pro cpu start user code0x1b [0m0x0d 
0x1b [0;32mI (648) spi_flash: detected chip: generic0x1b [0m0x0d 
0x1b [0;32mI (649) spi_flash: flash io: dio0x1b [0m0x0d 
0x1b [0;32mI (649) cpu_start: Starting scheduler on PRO CPU.0x1b [0m0x0d 
0x1b [0;32mI (0) cpu_start: Starting scheduler on APP CPU.0x1b [0m0x0d 
MicroPython v1.13 on 2020-09-02; ESP32 module with ESP320x0d 
Type "help()" for more information.0x0d 
>>> f.write("this is a test file.this is a test file.this is a test file.this is a test file.\n")0x0d 
Traceback (most recent call last):0x0d 
  File "<stdin>", line 1, in <module>0x0d 
NameError: name 'f' isn't defined0x0d 
>>> 0x0d 
>>> try:0x0d 
...     with open ("/this/is/a/test/directory/file.txt") as f:0x0d 
...         f.readlines()0x0d 
...         0x08 0x08 0x08 0x08 0x1b [K0x08 0x08 0x08 0x08 0x1b [Kexcept:0x0d 
...     print('MicroPython: failed')0x0d 
...     0x08 0x08 0x08 0x08 0x1b [K0x0d 
MicroPython: failed0x0d 
>>> 0x0d 
>>> 0x0d 
>>> 0x0d 
>>> 0x0d 
>>> with open("/this/is/a/test/directory/file.txt", "w") as f:0x0d 
...     ets Jun  8 2016 00:22:570x0d 
0x0d 
rst:0x1 (POWERON_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)0x0d 
configsip: 0, SPIWP:0xee0x0d 
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x000x0d 
mode:DIO, clock div:20x0d 
load:0x3fff0018,len:40x0d 
load:0x3fff001c,len:51480x0d 
load:0x40078000,len:128800x0d 
load:0x40080400,len:34840x0d 
entry 0x400806300x0d 
0x1b [0;32mI (549) cpu_start: Pro cpu up.0x1b [0m0x0d 
0x1b [0;32mI (549) cpu_start: Application information:0x1b [0m0x0d 
0x1b [0;32mI (549) cpu_start: Compile time:     Sep  2 2020 03:04:090x1b [0m0x0d 
0x1b [0;32mI (552) cpu_start: ELF file SHA256:  0000000000000000...0x1b [0m0x0d 
0x1b [0;32mI (558) cpu_start: ESP-IDF:          v4.0.10x1b [0m0x0d 
0x1b [0;32mI (563) cpu_start: Starting app cpu, entry point is 0x400828300x1b [0m0x0d 
0x1b [0;32mI (0) cpu_start: App cpu up.0x1b [0m0x0d 
0x1b [0;32mI (574) heap_init: Initializing. RAM available for dynamic allocation:0x1b [0m0x0d 
0x1b [0;32mI (580) heap_init: At 3FFAFF10 len 000000F0 (0 KiB): DRAM0x1b [0m0x0d 
0x1b [0;32mI (586) heap_init: At 3FFB6388 len 00001C78 (7 KiB): DRAM0x1b [0m0x0d 
0x1b [0;32mI (593) heap_init: At 3FFB9A20 len 00004108 (16 KiB): DRAM0x1b [0m0x0d 
0x1b [0;32mI (599) heap_init: At 3FFBDB5C len 00000004 (0 KiB): DRAM0x1b [0m0x0d 
0x1b [0;32mI (605) heap_init: At 3FFCAD78 len 00015288 (84 KiB): DRAM0x1b [0m0x0d 
0x1b [0;32mI (611) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM0x1b [0m0x0d 
0x1b [0;32mI (617) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM0x1b [0m0x0d 
0x1b [0;32mI (624) heap_init: At 4009E9D8 len 00001628 (5 KiB): IRAM0x1b [0m0x0d 
0x1b [0;32mI (630) cpu_start: Pro cpu start user code0x1b [0m0x0d 
0x1b [0;32mI (648) spi_flash: detected chip: generic0x1b [0m0x0d 
0x1b [0;32mI (649) spi_flash: flash io: dio0x1b [0m0x0d 
0x1b [0;32mI (649) cpu_start: Starting scheduler on PRO CPU.0x1b [0m0x0d 
0x1b [0;32mI (0) cpu_start: Starting scheduler on APP CPU.0x1b [0m0x0d 
MicroPython v1.13 on 2020-09-02; ESP32 module with ESP320x0d 
Type "help()" for more information.0x0d 
>>> f.write("this is a test file.this is a test file.this is a test file.this is a test file.\n")0x0d 
Traceback (most recent call last):0x0d 
  File "<stdin>", line 1, in <module>0x0d 
NameError: name 'f' isn't defined0x0d 
>>> 0x0d 
>>> try:0x0d 
...     with open ("/this/is/a/test/directory/file.txt") as f:0x0d 
...         f.readlines()0x0d 
...         0x08 0x08 0x08 0x08 0x1b [K0x08 0x08 0x08 0x08 0x1b [Kexcept:0x0d 
...     print('MicroPython: failed')0x0d 
...     0x08 0x08 0x08 0x08 0x1b [K0x0d 
MicroPython: failed0x0d 
>>> 0x0d 
>>> with open("/this/is/a/test/directory/file.txt", "w") as f:0x0d 
...     0x0d 
>>> 0x0d 
>>> 0x0d 
>>> with open("/this/is/a/test/directory/file.txt", "w") as f:0x0d 
...     0x0d 
>>> with open("/this/is/a/test/directory/file.txt", "w") as f:0x0d 
...     f.write("this is a test file.\n")0x0d 
...     f.write("this is a test file.\n")0x0d 
...     f.write("this is a test file.\n")0x0d 
...     f.write("this is a test file.\n")0x0d 
...     f.write("\n")0x0d 
...     0x08 0x08 0x08 0x08 0x1b [K0x0d 
Traceback (most recent call last):0x0d 
  File "<stdin>", line 1, in <module>0x0d 
OSError: [Errno 2] ENOENT0x0d 
>>> ets Jun  8 2016 00:22:570x0d 
0x0d 
rst:0x1 (POWERON_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)0x0d 
configsip: 0, SPIWP:0xee0x0d 
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x000x0d 
mode:DIO, clock div:20x0d 
load:0x3fff0018,len:40x0d 
load:0x3fff001c,len:51480x0d 
load:0x40078000,len:128800x0d 
load:0x40080400,len:34840x0d 
entry 0x400806300x0d 
0x1b [0;32mI (549) cpu_start: Pro cpu up.0x1b [0m0x0d 
0x1b [0;32mI (549) cpu_start: Application information:0x1b [0m0x0d 
0x1b [0;32mI (549) cpu_start: Compile time:     Sep  2 2020 03:04:090x1b [0m0x0d 
0x1b [0;32mI (552) cpu_start: ELF file SHA256:  0000000000000000...0x1b [0m0x0d 
0x1b [0;32mI (558) cpu_start: ESP-IDF:          v4.0.10x1b [0m0x0d 
0x1b [0;32mI (563) cpu_start: Starting app cpu, entry point is 0x400828300x1b [0m0x0d 
0x1b [0;32mI (0) cpu_start: App cpu up.0x1b [0m0x0d 
0x1b [0;32mI (574) heap_init: Initializing. RAM available for dynamic allocation:0x1b [0m0x0d 
0x1b [0;32mI (580) heap_init: At 3FFAFF10 len 000000F0 (0 KiB): DRAM0x1b [0m0x0d 
0x1b [0;32mI (586) heap_init: At 3FFB6388 len 00001C78 (7 KiB): DRAM0x1b [0m0x0d 
0x1b [0;32mI (593) heap_init: At 3FFB9A20 len 00004108 (16 KiB): DRAM0x1b [0m0x0d 
0x1b [0;32mI (599) heap_init: At 3FFBDB5C len 00000004 (0 KiB): DRAM0x1b [0m0x0d 
0x1b [0;32mI (605) heap_init: At 3FFCAD78 len 00015288 (84 KiB): DRAM0x1b [0m0x0d 
0x1b [0;32mI (611) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM0x1b [0m0x0d 
0x1b [0;32mI (617) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM0x1b [0m0x0d 
0x1b [0;32mI (624) heap_init: At 4009E9D8 len 00001628 (5 KiB): IRAM0x1b [0m0x0d 
0x1b [0;32mI (630) cpu_start: Pro cpu start user code0x1b [0m0x0d 
0x1b [0;32mI (648) spi_flash: detected chip: generic0x1b [0m0x0d 
0x1b [0;32mI (649) spi_flash: flash io: dio0x1b [0m0x0d 
0x1b [0;32mI (649) cpu_start: Starting scheduler on PRO CPU.0x1b [0m0x0d 
0x1b [0;32mI (0) cpu_start: Starting scheduler on APP CPU.0x1b [0m0x0d 
MicroPython v1.13 on 2020-09-02; ESP32 module with ESP320x0d 
Type "help()" for more information.0x0d 
>>> with open ("/this/is/a/test/directory/file.txt") as f:0x0d 
...     f.readlines()0x0d 
...     0x08 0x08 0x08 0x08 0x1b [Kexcept:0x0d 
...     print('MicroPython: failed')0x0d 
...     0x08 0x08 0x08 0x08 0x1b [K0x0d 
Traceback (most recent call last):0x0d 
  File "<stdin>", line 30x0d 
SyntaxError: invalid syntax0x0d 
>>> 0x0d 
>>> with open("/this/is/a/test/directory/file.txt", "w") as f:0x0d 
...     f.write("this is a test file.\n")0x0d 
...     f.write("this is a test file.\n")0x0d 
...     f.write("this is a test file.\n")0x0d 
...     f.write("this is a test file.\n")0x0d 
...     f.write("\n")0x0d 
...     0x08 0x08 0x08 0x08 0x1b [K0x0d 
Traceback (most recent call last):0x0d 
  File "<stdin>", line 1, in <module>0x0d 
OSError: [Errno 2] ENOENT0x0d 
>>> with open("/test_file.txt", "w") as f:0x0d 
...     f.write("this is a test file.\n")0x0d 
...     f.write("this is a test file.\n")0x0d 
...     f.write("this is a test file.\n")0x0d 
...     f.write("this is a test file.\n")0x0d 
...     f.write("\n")0x0d 
...     0x08 0x08 0x08 0x08 0x1b [K0x0d 
210x0d 
210x0d 
210x0d 
210x0d 
10x0d 
>>> ets Jun  8 2016 00:22:570x0d 
0x0d 
rst:0x1 (POWERON_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)0x0d 
configsip: 0, SPIWP:0xee0x0d 
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x000x0d 
mode:DIO, clock div:20x0d 
load:0x3fff0018,len:40x0d 
load:0x3fff001c,len:51480x0d 
load:0x40078000,len:128800x0d 
load:0x40080400,len:34840x0d 
entry 0x400806300x0d 
0x1b [0;32mI (549) cpu_start: Pro cpu up.0x1b [0m0x0d 
0x1b [0;32mI (549) cpu_start: Application information:0x1b [0m0x0d 
0x1b [0;32mI (549) cpu_start: Compile time:     Sep  2 2020 03:04:090x1b [0m0x0d 
0x1b [0;32mI (552) cpu_start: ELF file SHA256:  0000000000000000...0x1b [0m0x0d 
0x1b [0;32mI (558) cpu_start: ESP-IDF:          v4.0.10x1b [0m0x0d 
0x1b [0;32mI (563) cpu_start: Starting app cpu, entry point is 0x400828300x1b [0m0x0d 
0x1b [0;32mI (0) cpu_start: App cpu up.0x1b [0m0x0d 
0x1b [0;32mI (574) heap_init: Initializing. RAM available for dynamic allocation:0x1b [0m0x0d 
0x1b [0;32mI (580) heap_init: At 3FFAFF10 len 000000F0 (0 KiB): DRAM0x1b [0m0x0d 
0x1b [0;32mI (586) heap_init: At 3FFB6388 len 00001C78 (7 KiB): DRAM0x1b [0m0x0d 
0x1b [0;32mI (593) heap_init: At 3FFB9A20 len 00004108 (16 KiB): DRAM0x1b [0m0x0d 
0x1b [0;32mI (599) heap_init: At 3FFBDB5C len 00000004 (0 KiB): DRAM0x1b [0m0x0d 
0x1b [0;32mI (605) heap_init: At 3FFCAD78 len 00015288 (84 KiB): DRAM0x1b [0m0x0d 
0x1b [0;32mI (611) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM0x1b [0m0x0d 
0x1b [0;32mI (617) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM0x1b [0m0x0d 
0x1b [0;32mI (624) heap_init: At 4009E9D8 len 00001628 (5 KiB): IRAM0x1b [0m0x0d 
0x1b [0;32mI (630) cpu_start: Pro cpu start user code0x1b [0m0x0d 
0x1b [0;32mI (648) spi_flash: detected chip: generic0x1b [0m0x0d 
0x1b [0;32mI (649) spi_flash: flash io: dio0x1b [0m0x0d 
0x1b [0;32mI (649) cpu_start: Starting scheduler on PRO CPU.0x1b [0m0x0d 
0x1b [0;32mI (0) cpu_start: Starting scheduler on APP CPU.0x1b [0m0x0d 
MicroPython v1.13 on 2020-09-02; ESP32 module with ESP320x0d 
Type "help()" for more information.0x0d 
>>> try:0x0d 
...     with open ("/test_file.txt") as f:0x0d 
...         f.readlines()0x0d 
...         0x08 0x08 0x08 0x08 0x1b [K0x08 0x08 0x08 0x08 0x1b [Kexcept:0x0d 
...     print('MicroPython: failed')0x0d 
...     0x08 0x08 0x08 0x08 0x1b [K0x0d 
['this is a test file.\n', 'this is a test file.\n', 'this is a test file0x0d 
>>> with open("/test_file.txt", "w") as f:0x0d 
...     f.write("this is a test file.\n")0x0d 
...     f.write("this is a test file.\n")0x0d 
...     f.write("this is a test file.\n")0x0d 
...     f.write("this is a test file.\n")0x0d 
...     f.write("\n")0x0d 
...     0x08 0x08 0x08 0x08 0x1b [K0x0d 
210x0d 
210x0d 
210x0d 
210x0d 
10x0d 
>>> try:0x0d 
...     with open ("/test_file.txt") as f:0x0d 
...         f.readlines()0x0d 
...         0x08 0x08 0x08 0x08 0x1b [K0x08 0x08 0x08 0x08 0x1b [Kexcept:0x0d 
...     print('MicroPython: failed')0x0d 
...     0x08 0x08 0x08 0x08 0x1b [K0x0d 
['this is a test file.\n', 'this is a test file.\n', 'this is a test file.\n', 'this is a test file.\n', '\n']0x0d 
>>> 0x0d 
>>> with open("/test_file.txt", "w") as f:0x0d 
...     f.write("this is a test file.\n")0x0d 
...     f.write("this is a test file.\n")0x0d 
...     f.write("this is a test file.\n")0x0d 
...     f.write("this is a test file.\n")0x0d 
...     f.write("\n")0x0d 
...     0x08 0x08 0x08 0x08 0x1b [K0x0d 
210x0d 
210x0d 
210x0d 
210x0d 
10x0d 
>>> try:0x0d 
...     with open ("/test_file.txt") as f:0x0d 
...         pass0x0d 
...         0x08 0x08 0x08 0x08 0x1b [K0x08 0x08 0x08 0x08 0x1b [Kexcept:0x0d 
...     print('MicroPython: failed')0x0d 
...     0x08 0x08 0x08 0x08 0x1b [K0x0d 
>>> 0x0d 
>>> 0x0d 
>>> with open("/test_file.txt", "w") as f:0x0d 
...     f.write("this is a test file.\n")0x0d 
...     f.write("this is a test file.\n")0x0d 
...     f.write("this is a test file.\n")0x0d 
...     f.write("this is a test file.\n")0x0d 
...     f.write("\n")0x0d 
...     0x08 0x08 0x08 0x08 0x1b [K0x0d 
210x0d 
210x0d 
210x0d 
210x0d 
10x0d 
>>> try:0x0d 
...     with open ("/test_file.txt") as f:0x0d 
...         pass0x0d 
...         0x08 0x08 0x08 0x08 0x1b [K0x08 0x08 0x08 0x08 0x1b [Kexcept:0x0d 
...     print('MicroPython: failed')0x0d 
...     0x08 0x08 0x08 0x08 0x1b [K0x0d 
>>> 0x0d 
>>> with open("/test_file.txt", "w") as f:0x0d 
...     f.write("this is a test file.\n")0x0d 
...     f.write("this is a test file.\n")0x0d 
...     f.write("this is a test file.\n")0x0d 
...     f.write("this is a test file.\n")0x0d 
...     f.write("\n")0x0d 
...     0x08 0x08 0x08 0x08 0x1b [K0x0d 
210x0d 
210x0d 
210x0d 
210x0d 
10x0d 
>>> try:0x0d 
...     with open ("/test_file.txt") as f:0x0d 
...         pass0x0d 
...         0x08 0x08 0x08 0x08 0x1b [K0x08 0x08 0x08 0x08 0x1b [Kexcept:0x0d 
...     print('MicroPython: failed')0x0d 
...     0x08 0x08 0x08 0x08 0x1b [K0x0d 
>>> 0x0d 
>>> with open("/test_file.txt", "w") as f:0x0d 
...     f.write("this is a test file.\n")0x0d 
...     f.write("this is a test file.\n")0x0d 
...     f.write("this is a test file.\n")0x0d 
...     f.write("this is a test file.\n")0x0d 
...     f.write("\n")0x0d 
...     0x08 0x08 0x08 0x08 0x1b [K0x0d 
210x0d 
210x0d 
210x0d 
210x0d 
10x0d 
>>> try:0x0d 
...     with open ("/test_file.txt") as f:0x0d 
...         pass0x0d 
...         0x08 0x08 0x08 0x08 0x1b [K0x08 0x08 0x08 0x08 0x1b [Kexcept:0x0d 
...     print('MicroPython: failed')0x0d 
...     0x08 0x08 0x08 0x08 0x1b [K0x0d 
>>> 0x0d 
>>> with open("/test_file.txt", "w") as f:0x0d 
...     f.write("this is a test file.\n")0x0d 
...     f.write("this is a test file.\n")0x0d 
...     f.write("this is a test file.\n")0x0d 
...     f.write("this is a test file.\n")0x0d 
...     f.write("\n")0x0d 
...     0x08 0x08 0x08 0x08 0x1b [K0x0d 
210x0d 
210x0d 
210x0d 
210x0d 
10x0d 
>>> try:0x0d 
...     with open ("/test_file.txt") as f:0x0d 
...         pass0x0d 
...         0x08 0x08 0x08 0x08 0x1b [K0x08 0x08 0x08 0x08 0x1b [Kexcept:0x0d 
...     print('MicroPython: failed')0x0d 
...     0x08 0x08 0x08 0x08 0x1b [K0x0d 
>>> 0x0d 
>>> with open("/test_file.txt", "w") as f:0x0d 
...     f.write("this is a test file.\n")0x0d 
...     f.write("this is a test file.\n")0x0d 
...     f.write("this is a test file.\n")0x0d 
...     f.write("this is a test file.\n")0x0d 
...     f.write("\n")0x0d 
...     0x08 0x08 0x08 0x08 0x1b [K0x0d 
210x0d 
210x0d 
210x0d 
210x0d 
10x0d 
>>> try:0x0d 
...     with open ("/test_file.txt") as f:0x0d 
...         pass0x0d 
...         0x08 0x08 0x08 0x08 0x1b [K0x08 0x08 0x08 0x08 0x1b [Kexcept:0x0d 
...     print('MicroPython: failed')0x0d 
...     0x08 0x08 0x08 0x08 0x1b [K0x0d 
>>> 0x0d 
>>> with open("/test_file.txt", "w") as f:0x0d 
...     f.write("this is a test file.\n")0x0d 
...     f.write("this is a test file.\n")0x0d 
...     f.write("this is a test file.\n")0x0d 
...     f.write("this is a test file.\n")0x0d 
...     f.write("\n")0x0d 
...     0x08 0x08 0x08 0x08 0x1b [K0x0d 
210x0d 
210x0d 
210x0d 
210x0d 
10x0d 
>>> try:0x0d 
...     with open ("/test_file.txt") as f:0x0d 
...         pass0x0d 
...         0x08 0x08 0x08 0x08 0x1b [K0x08 0x08 0x08 0x08 0x1b [Kexcept:0x0d 
...     print('MicroPython: failed')0x0d 
...     0x08 0x08 0x08 0x08 0x1b [K0x0d 
>with open("/test_file.txt", "w") as f:0x0d 
...     f.write("this is a test file.\n")0x0d 
...     f.write("this is a test file.\n")0x0d 
...     f.write("this is a test file.\n")0x0d 
...     f.write("this is a test file.\n")0x0d 
...     f.write("\n")0x0d 
...     0x08 0x08 0x08 0x08 0x1b [K0x0d 
210x0d 
210x0d 
210x0d 
210x0d 
10x0d 
>>> try:0x0d 
...     with open ("/test_file.txt") as f:0x0d 
...         pass0x0d 
...         0x08 0x08 0x08 0x08 0x1b [K0x08 0x08 0x08 0x08 0x1b [Kexcept:0x0d 
...     print('MicroPython: failed')0x0d 
...     0x08 0x08 0x08 0x08 0x1b [K0x0d 
>>> with open("/test_file.txt", "w") as f:0x0d 
...     f.write("this is a test file.\n")0x0d 
...     f.write("this is a test file.\n")0x0d 
...     f.write("this is a test file.\n")0x0d 
...     f.write("this is a test file.\n")0x0d 
...     f.write("\n")0x0d 
...     0x08 0x08 0x08 0x08 0x1b [K0x0d 
210x0d 
210x0d 
210x0d 
210x0d 
10x0d 
>>> try:0x0d 
...     with open ("/test_file.txt") as f:0x0d 
...         pass0x0d 
...         0x08 0x08 0x08 0x08 0x1b [K0x08 0x08 0x08 0x08 0x1b [Kexcept:0x0d 
...     print('MicroPython: failed')0x0d 
...     0x08 0x08 0x08 0x08 0x1b [K0x0d 
>>> 0x0d 
>>> ets Jun  8 2016 00:22:570x0d 
0x0d 
rst:0x1 (POWERON_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)0x0d 
configsip: 0, SPIWP:0xee0x0d 
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x000x0d 
mode:DIO, clock div:20x0d 
load:0x3fff0018,len:40x0d 
load:0x3fff001c,len:51480x0d 
load:0x40078000,len:128800x0d 
load:0x40080400,len:34840x0d 
entry 0x400806300x0d 
0x1b [0;32mI (549) cpu_start: Pro cpu up.0x1b [0m0x0d 
0x1b [0;32mI (549) cpu_start: Application information:0x1b [0m0x0d 
0x1b [0;32mI (549) cpu_start: Compile time:     Sep  2 2020 03:04:090x1b [0m0x0d 
0x1b [0;32mI (552) cpu_start: ELF file SHA256:  0000000000000000...0x1b [0m0x0d 
0x1b [0;32mI (558) cpu_start: ESP-IDF:          v4.0.10x1b [0m0x0d 
0x1b [0;32mI (563) cpu_start: Starting app cpu, entry point is 0x400828300x1b [0m0x0d 
0x1b [0;32mI (0) cpu_start: App cpu up.0x1b [0m0x0d 
0x1b [0;32mI (574) heap_init: Initializing. RAM available for dynamic allocation:0x1b [0m0x0d 
0x1b [0;32mI (580) heap_init: At 3FFAFF10 len 000000F0 (0 KiB): DRAM0x1b [0m0x0d 
0x1b [0;32mI (586) heap_init: At 3FFB6388 len 00001C78 (7 KiB): DRAM0x1b [0m0x0d 
0x1b [0;32mI (593) heap_init: At 3FFB9A20 len 00004108 (16 KiB): DRAM0x1b [0m0x0d 
0x1b [0;32mI (599) heap_init: At 3FFBDB5C len 00000004 (0 KiB): DRAM0x1b [0m0x0d 
0x1b [0;32mI (605) heap_init: At 3FFCAD78 len 00015288 (84 KiB): DRAM0x1b [0m0x0d 
0x1b [0;32mI (611) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM0x1b [0m0x0d 
0x1b [0;32mI (617) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM0x1b [0m0x0d 
0x1b [0;32mI (624) heap_init: At 4009E9D8 len 00001628 (5 KiB): IRAM0x1b [0m0x0d 
0x1b [0;32mI (630) cpu_start: Pro cpu start user code0x1b [0m0x0d 
0x1b [0;32mI (648) spi_flash: detected chip: generic0x1b [0m0x0d 
0x1b [0;32mI (649) spi_flash: flash io: dio0x1b [0m0x0d 
0x1b [0;32mI (649) cpu_start: Starting scheduler on PRO CPU.0x1b [0m0x0d 
0x1b [0;32mI (0) cpu_start: Starting scheduler on APP CPU.0x1b [0m0x0d 
MicroPython v1.13 on 2020-09-02; ESP32 module with ESP320x0d 
Type "help()" for more information.0x0d 
>>> try:0x0d 
...     with open ("/test_file.txt") as f:0x0d 
...         pass0x0d 
...         0x08 0x08 0x08 0x08 0x1b [K0x08 0x08 0x08 0x08 0x1b [Kexcept:0x0d 
...     print('MicroPython: failed')0x0d 
...     0x08 0x08 0x08 0x08 0x1b [K0x0d 
>>> 